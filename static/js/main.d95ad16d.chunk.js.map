{"version":3,"sources":["images/pexels-photo-724994.jpg","images/pexels-photo-2582937.jpg","images/photo-1555616635-640b71bdb185.jpg","images/pexels-photo-267596.jpg","images/photo-1559757148-5c350d0d3c56.jpg","images/pexels-photo-2017481.jpg","Game.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SHUFFLE","DIRECTIONS_MOVE","random","min","max","Math","floor","GameState","this","NewGame","Array","ROW","fill","map","x","index","instance","i","board","solved","moves","getNewBoard","stack","shuffle","shuffling","shuffleMoves","moveDir","tilePos","emptyPos","TILES","abs","resolved","canMoveTile","emptyPosition","tilePosition","boardAfterMove","push","length","pop","dir","poss","posToMove","tileToMove","moveTile","Tile","pos","onClick","top","left","bgLeft","bgTop","className","style","backgroundPosition","Game","gameState","getInstance","useState","getState","state","setState","undo","useGameState","newGame","move","slice","key","ReactDOM","render","document","getElementById","Contact","useForm","register","errors","handleSubmit","showText","setShowText","onSubmit","textAlign","htmlFor","type","name","ref","required","maxlength","nom","color","prenom","pattern","email","id","message","App","AOS","init","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","offset","delay","duration","easing","once","mirror","anchorPlacement","data-aos","src","head","alt","labo","puce","puce2","cerveau","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d95ad16d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pexels-photo-724994.c9658d69.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pexels-photo-2582937.317381e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1555616635-640b71bdb185.b70f36af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pexels-photo-267596.1c8a4794.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photo-1559757148-5c350d0d3c56.0dca93b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pexels-photo-2017481.5d4a3c7a.jpg\";","import React, { useState} from 'react';\nimport './App.css';\nimport './index.js';\nimport ReactDOM from \"react-dom\";\n\n// constante pour la création du board\nconst ROW = 4;\nconst COLS = 4;\nconst TILES = ROW * COLS;\nconst EMPTY = TILES - 1;\nconst SHUFFLE = [60, 80];\nconst DIRECTIONS_MOVE = ['up', 'down', 'left', 'right'];\n\n// fonction nb aléatoire dans un interval donné\nfunction random (min, max) {\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n\n//___________________________________\n// Logique du jeu class singleton car le jeu ne s'exécute qu'une fois dans l'applicaiton\n\nclass GameState {\n  // toutes les tuiles sont à leur place\n  static getNewBoard () {\n    return Array(TILES).fill(0).map((x, index) => [\n      Math.floor(index / ROW),\n      index % COLS\n    ]);\n  }\n\n  // puzzle résolu\n  static solved = GameState.getNewBoard();\n  static instance = null;\n  static getInstance () {\n    if (!GameState.instance) GameState.instance = new GameState();\n    return GameState.instance;\n  }\n\n  constructor () {\n    this.NewGame();\n  }\n\n  //vérifier si le tableau est résolu\n  // compare l’état actuel du tableau avec la propriété statique solved\n  resolved () {\n    for (let i=0; i<TILES; i++) {\n      if (this.board[i][0] !== GameState.solved[i][0]\n          || this.board[i][1] !== GameState.solved[i][1])\n        return false;\n    }\n    return true;\n  }\n// le jeu commence\n  NewGame () {\n    this.moves = 0;   //le compteur de déplacements est mis à 0,\n    this.board = GameState.getNewBoard(); // crée un tableau de jeu\n    this.stack = [];  // /la pile d'états précédents est vide et le tableau est à l'état commandé.\n    this.shuffle();\n  }\n // on mélange un nombre de fois le tableau de manière aléatoire\n  shuffle () {\n    this.shuffling = true;\n    let shuffleMoves = random(...SHUFFLE);\n    while (shuffleMoves --> 0) {\n      this.moveDir (DIRECTIONS_MOVE[random(0,3)]);\n    }\n    this.shuffling = false;\n  }\n// on vérifie si la tuile peut bouger ou non\n  //Pour être adjacentes, deux tuiles doivent se trouver dans la même ligne ou la même colonne.\n  // Si elles sont dans la même ligne, la différence de leurs index de colonne doit être égale à un.\n  // Si elles sont dans la même colonne, la différence de leurs index de ligne doivent être égaux à un.\n  canMoveTile (index) {\n    if (index < 0 || index >= TILES) return false;\n\n    const tilePos = this.board[index];\n    const emptyPos = this.board[EMPTY];\n\n    if (tilePos[0] === emptyPos[0])\n      return Math.abs(tilePos[1] - emptyPos[1]) === 1;\n\n    else if (tilePos[1] === emptyPos[1])\n      return Math.abs(tilePos[0] - emptyPos[0]) === 1;\n\n    else return false;\n  }\n\n  // On déplade la tuile.\n  moveTile (index) {\n    if (!this.shuffling && this.resolved()) return false;\n    if (!this.canMoveTile(index)) return false;\n\n    const emptyPosition = [...this.board[EMPTY]];\n    const tilePosition = [...this.board[index]];\n\n    // copie le tableau actuel et échange les positions\n    let boardAfterMove = [...this.board];\n    boardAfterMove[EMPTY] = tilePosition;\n    boardAfterMove[index] = emptyPosition;\n\n    // update le tableau et on compte +1 au compteur de déplacement\n    if (!this.shuffling) this.stack.push(this.board);\n    this.board = boardAfterMove;\n    if (!this.shuffling) this.moves += 1;\n\n    return true;\n  }\n\n  // annuler le déplacement précédent.\n  undo () {\n    if (this.stack.length === 0) return false;\n    this.board = this.stack.pop();\n    this.moves -= 1;\n  }\n\n  // déduire la position de la tuile, de la direction\n  // si la direction est 'up', nous voulons déplacer la tuile immédiatement en dessous de celle  vide,\n  // si la direction est 'down', alors la tuile juste au-dessus  de celle vide\n  moveDir (dir) {\n    const poss = this.board[EMPTY];\n    const posToMove = dir === 'up' ? [poss[0]+1, poss[1]]\n        : dir === 'down' ? [poss[0]-1, poss[1]]\n            : dir === 'left' ? [poss[0], poss[1]+1]\n                : dir === 'right' ? [poss[0], poss[1]-1]\n                    : poss;\n\n    // récupère l'index de la position\n    let tileToMove = EMPTY;\n    for (let i=0; i<TILES; i++) {\n      if (this.board[i][0] === posToMove[0] && this.board[i][1] === posToMove[1]) {\n        tileToMove = i;\n        break;\n      }\n    }\n    // on bouge la tuile\n    this.moveTile(tileToMove);\n  }\n\n  getState () {\n    const self = this;\n    return {\n      board: self.board,\n      moves: self.moves,\n      solved: self.resolved(),\n    };\n  }\n}\n\n//_________________________________________\n// Utilisation des Hooks !!\nfunction useGameState () {\n  const gameState = GameState.getInstance();\n  const [state, setState] = useState(gameState.getState());\n\n  // on start le jeu\n  function newGame () {\n    gameState.NewGame();\n    setState(gameState.getState());\n  }\n\n  // on supprime le dernier mouvement\n  function undo () {\n    gameState.undo();\n    setState(gameState.getState());\n  }\n\n  // on move la tuile\n  function move (index) {\n    return function () {\n      gameState.moveTile(index);\n      setState(gameState.getState());\n    }\n  }\n\n\n  return [state.board, state.moves, state.solved, newGame, undo, move];\n}\n\n\n\n//_______________________________________________\n// on positionne les tuiles dans le tableau\nfunction Tile ({index, pos, onClick}) {\n  const top = pos[0]*75 + 5;\n  const left = pos[1]*75 + 5;\n  const bgLeft = (index%4)*75 + 5;\n  const bgTop = Math.floor(index/4)*75 + 5;\n\n  return <div\n      className='tile'\n      onClick={onClick}\n      style={{top, left, backgroundPosition: `-${bgLeft}px -${bgTop}px` }}\n  />;\n}\n\nfunction Game () {\n  const [board, moves, solved, newGame, undo, move] = useGameState();\n\n  return (\n      <div className='game-container align-content-center'>\n        <div className='game-header'>\n          <div className='moves'>\n            {moves}\n          </div>\n          <button className='big-button' onClick={undo}> UNDO </button>\n          <button className='big-button' onClick={newGame}> RESTART </button>\n        </div>\n\n        <div className='board'>\n          {\n            board.slice(0,-1).map((pos, index) => (\n                <Tile\n                    key={index}\n                    index={index}\n                    pos={pos}\n                    onClick={move(index)}/>\n            ))\n          }\n          { solved &&\n          <div className='overlay'>\n            <button className='big-button' onClick={newGame}>\n              PLAY AGAIN\n            </button>\n          </div>\n          }\n        </div>\n      </div>\n  );\n}\n\nReactDOM.render(<Game  />, document.getElementById('root'));\nexport default Game ;","import React, {useState} from 'react'\nimport useForm from 'react-hook-form'\nimport './App.css';\nimport './index.js';\nimport ReactDOM from \"react-dom\";\n\n\nfunction Contact () {\n    const { register, errors,  handleSubmit  } = useForm();\n    const [showText, setShowText] = useState(false);\n    const onSubmit = () => setShowText(!showText);\n\n    return (\n        <div className=\" form \">\n        <form onSubmit={handleSubmit(onSubmit )} >\n            {showText &&\n            <div >\n                <h1 style={{ textAlign: \"center\" }}>Success!</h1>\n                <p style={{ textAlign: \"center\" }}>\n                   Votre message a été envoyé avec succes\n                </p>\n            </div>\n            }\n            <div className=\"form-group col-6 \">\n                <label className=\"form-control-label\" htmlFor=\"form-group-input\">Nom</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       name=\"nom\"\n                       ref={register({ required: true, maxlength: 20 })}\n                />\n                {errors.nom &&  <p style={{ color: \"white\" }}>\n                    Nom obligatoire\n                </p>}\n            </div>\n\n            <div className=\"form-group col-6\">\n                <label className=\"form-control-label\" htmlFor=\"form-group-input\">Prenom</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       name=\"prenom\"\n                       ref={register({ required: true, maxlength: 20 })}\n                />\n                {errors.prenom && <p style={{ color: \"white\" }}>\n                    Prénom obligatoire\n                </p>}\n            </div>\n\n            <div className=\"form-group col-6\">\n                <label className=\"form-control-label\" htmlFor=\"form-group-input\">Email</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       name=\"email\"\n                       ref={register({\n                           required: true,\n                           pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                       })}\n                />\n                {errors.email && <p style={{ color: \"white\" }}>\n                   email non valide\n                </p>}\n            </div>\n\n            <div className=\"form-group col-6\">\n                <label className=\"form-control-label\" htmlFor=\"form-group-input\">Message</label>\n                <textarea\n                    className=\"form-control\"\n                    id=\"form-group-input\"\n                    name=\"message\"\n                    ref={register({\n                        required: true,\n                    })}>\n                </textarea>\n                {errors.message && <p style={{ color: \"white\" }}>\n                    vous devevez mettre un message\n                </p>}\n            </div>\n            <div className=\"form-group col-6\">\n                <button\n                    type=\"submit\"\n                    > Envoyer </button>\n\n\n            </div>\n\n        </form>\n        </div>\n\n\n    );\n}\nReactDOM.render(<Contact  />, document.getElementById('root'));\nexport default Contact ;","import React  from \"react\";\nimport './App.css';\nimport './index.js';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css'\n\nimport Game from './Game.js'\nimport Contact from './Contact.js'\nimport head from './images/pexels-photo-724994.jpg';\nimport puce from './images/pexels-photo-2582937.jpg';\nimport puce2 from './images/photo-1555616635-640b71bdb185.jpg';\nimport labo from './images/pexels-photo-267596.jpg'\nimport cerveau from './images/photo-1559757148-5c350d0d3c56.jpg'\nimport color from './images/pexels-photo-2017481.jpg'\n\n\nfunction App() {\n\n    AOS.init({\n\n            // Global settings:\n            disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\n            startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\n            initClassName: 'aos-init', // class applied after initialization\n            animatedClassName: 'aos-animate', // class applied on animation\n            useClassNames: true, // if true, will add content of `data-aos` as classes on scroll\n            disableMutationObserver: false, // disables automatic mutations' detections (advanced)\n            debounceDelay: 50, // the delay on debounce used while resizing window (advanced)\n            throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\n\n            // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n            offset: 120, // offset (in px) from the original trigger point\n            delay: 0, // values from 0 to 3000, with step 50ms\n            duration: 1200, // values from 0 to 3000, with step 50ms\n            easing: 'ease', // default easing for AOS animations\n            once: false, // whether animation should happen only once - while scrolling down\n            mirror: false, // whether elements should animate out while scrolling past them\n            anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation\n    })\n    return (\n        <div>\n\n            <div className='header_fond'>\n                <h1 id='name'>Formulabs </h1>\n            </div>\n\n            <section id=\"s1\" className='slide '>\n                <div className='title '>\n                    <h2 className='sTitle '>Interfaces processeur-cerveau</h2>\n                    <hr/>\n                </div>\n                    <p data-aos=\"fade-up\" >Formulabs propose des solutions innovantes dans le cadre le la connexion du cerveau\n                        humain et\n                        des dernières technologies CPU. Les études cliniques ont duré plus de vingt années et\n                        nos\n                        résultats sont désormais validés. Nos premières interfaces neuronales sont donc dès à\n                        présent disponibles.\n                    </p>\n                <img data-aos=\"flip-left\" className=' img ' src={head} alt=\"tête\"/>\n\n            </section>\n\n            <section id=\"s2\" className='slide aos-animate'>\n                <div className='title'>\n                    <h2 className='sTitle'>La technologie</h2>\n                    <hr/>\n\n                </div>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    L'interface entre le cerveau humain et la puissance de calcul d'un processeur n'est désormais\n                    plus un rêve. Les laboratoires de Formulabs ont mis au point un procédé breveté et unique au\n                    monde permettant d'implanter une processeur au sein d'un cerveau organique.\n                </p >\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    La connexion entre l'organe humain et son annexe numérique se fait au travers d'un réseau\n                    neuronal artificiel intermédiaire qui est posé lors de l'opération. L'installation des\n                    composants est sans douleur et parfaitement sans risque.\n                </p>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    La technologie Formulabs est stable et offre des possibilités absolument incroyables. Nos\n                    clients attachent un taux de satisfaction proche de 100%.\n                </p>\n                <img data-aos=\"flip-left\" className=' img ' src={labo}  alt=\"labo\"/>\n            </section>\n\n            <section id=\"s3\" className='slide'>\n                <div className='title'>\n                    <h2 className='sTitle'>La puce GT2100</h2>\n                    <hr/>\n\n                </div>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    Notre gamme actuelle comprend un processeur unique, le GT2100. Il offre une puissance de calcul\n                    d e 841,73 GFLOPS. Cette puce est produite dans des conditions très stricte et dans des\n                    matériaux bio-compatibles évitant tout risque de rejet.\n                </p>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    La puce GT2100 est aussi doté d'un récepteur TMZ permettant des updates réguliers sans aucun\n                    risque de nuisances pour le corps. Cette puce est un produit unique sur le marché, elle\n                    constitue une révolution majeur dans le domaine des neuro- sciences.\n                </p>\n                <img data-aos=\"flip-left\" className='  img' src={puce}  alt=\"puce\"/>\n                <img data-aos=\"flip-right\" className=' img ' src={puce2}  alt=\"puce\"/>\n\n            </section>\n\n            <section id=\"s4\" className='slide'>\n                <div className='title '>\n                    <h2 className='sTitle'>Les avantages du Formulabs GT2100</h2>\n                    <hr/>\n\n                </div>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    L'installation de la puce GT2100 permet l'augmentation de nombreuses facultés du cerveau. En\n                    voici une liste non exhaustive:\n                </p>\n\n                <ul>\n                    <li data-aos=\"fade-up\" className=\"aos-animate\" >Augmentation du nombre de couleurs perçues et de la netteté générale</li>\n                    <li data-aos=\"fade-up\" className=\"aos-animate\" >Capacité artistiques augmentées jusqu'à 750%</li>\n                    <li data-aos=\"fade-up\" className=\"aos-animate\" >Possibilité de travailler en multitâche et donc de gagner un temps précieux</li>\n                    <li data-aos=\"fade-up\" className=\"aos-animate\" >Capacité maximale de calcul numérique</li>\n                    <li data-aos=\"fade-up\" className=\"aos-animate\" >Possibilité d'une connexion Internet donnant accès à des milliards d'informations</li>\n                    <li data-aos=\"fade-up\" className=\"aos-animate\" >Capacités logiques décuplées</li>\n                </ul>\n                <img data-aos=\"flip-left\" className=' img ' src={color}  alt=\"face_color\"/>\n\n            </section>\n            <section id=\"s5\" className='slide'>\n                <div className='title '>\n                    <h2 className='sTitle'>Test de logique Avant - Après</h2>\n                    <hr/>\n                    <p data-aos=\"fade-up\"  >\n                        Voici un test de logique développé pour vous permettre d'évaluer concrètement le gain offert\n                        par la puce GT2100. Reconstituer le puzzle suivant, prend en moyenne 2,1 secondes à nos clients\n                        augmentés.\n                    </p >\n                    <p data-aos=\"fade-up\" > Vous pouvez facilement tester vos capacités actuelles afin de mieux apprécier les avantages\n                        liés à l'augmentation.</p>\n                    <p> Voici le test, veillez à bien noter votre temps: </p>\n                    <Game/>\n                </div>\n\n\n            </section>\n\n            <section id=\"s6\" className='slide'>\n                <div className='title'>\n                    <h2 className='sTitle'>Aspects légaux liés à l'augmentation</h2>\n                    <hr/>\n\n                </div>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    Le cerveau est donc couplé au processeur Formulabs. Notre client est donc considéré dès\n                    l'installation de notre puce, dans la catégorie des humains augmentés. Veuillez noter que cela\n                    n'affectera en rien vos droits et devoirs en tant que citoyen dans votre pays.\n                </p>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    Il est tout de même obligatoire de vous enregistrer au service international de\n                    répertorisation des augmentations non biologiques. C'est une démarche administrative simple\n                    dont nous pouvons nous occuper sur demande.\n                </p>\n                <p data-aos=\"fade-up\" className=\"aos-animate\" >\n                    Vos futurs employeurs seront systématiquement averti de votre Augmentation, ce qui est souvent\n                    considéré comme un atout non négligeable.\n                </p>\n                <img data-aos=\"flip-right\" className=' img ' src={cerveau}  alt=\"brain\"/>\n\n            </section>\n            <section id=\"s7\" className='slide'>\n                <div className='title '>\n                    <h2 className='sTitle'>Formulaire de contact</h2>\n                    <hr/>\n                    <p data-aos=\"fade-up\" >\n                        Si vous souhaitez nous rencontrer ou simplement obtenir plus d'information sur nos services, merci de remplir ce formulaire:\n                    </p>\n                    <Contact/>\n\n                </div>\n            </section>\n        </div>\n\n    );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}